
<project name="groodbc" basedir="." default="build">

	<property environment="env" />
	<property name="dest.dir" value="build" />
	<property name="dest.dir.classes" value="${dest.dir}/classes" />
	<property name="dest.dir.lib" value="${dest.dir}" />
	<property name="artefact.name" value="${ant.project.name}" />
	<property name="artefact" value="${artefact.name}.jar" />
	<property name="dependency" value="./lib" />

	<target name="clean">
		<delete dir="${dest.dir}" />
		<delete dir="./log" />
	</target>
	

	<!--target name="init" depends="svn-version,get-tchome"-->
	<target name="init" >
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${dest.dir.classes}" />
		<mkdir dir="${dest.dir.classes}/META-INF"/>
		
		<path id="build.classpath">
			<fileset dir="${dependency}" >
				<include name="*.jar"/>
			</fileset>
		</path>
		<path id="test.classpath">
			<path refid="build.classpath"/>
			<fileset dir="${dest.dir.lib}" >
				<include name="*.jar"/>
			</fileset>
		</path>
	</target>

	<target name="build" depends="clean,init,svn-version">
		<javac srcdir="src" destdir="${dest.dir.classes}" includes="**" debug="true" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
		<!--MANIFEST-->
		<tstamp><format property="built.date" pattern="yyyy-MM-dd HH:mm" /></tstamp>
		<manifest file="${dest.dir.classes}/META-INF/manifest.mf">
			<attribute name="Built-Date" value="${built.date}"/>
			<section name="SVN">
				<attribute name="URL" value="${svn.url}"/>
				<attribute name="Revision" value="${svn.revision}"/>
				<attribute name="Version" value="${svn.version}"/>
			</section>
		</manifest>
		<!--JAR-->
		<jar basedir="${dest.dir.classes}" destfile="${dest.dir.lib}/${artefact}" manifest="${dest.dir.classes}/META-INF/manifest.mf"/>
	</target>

	<target name="test" depends="init" >
		<property name="script" value="Test"/>
		<java classname="groovy.ui.GroovyMain" fork="true" failonerror="true" inputstring="" logerror="true" output="test.log">
			<classpath refid="test.classpath"/>
			<jvmarg value="-Dfile.encoding=UTF-8"/>
			<!--jvmarg value="-Djavax.net.debug=all"/-->
			<!--jvmarg value="-Djava.util.logging.config.file=logging.properties"/-->
			<jvmarg value="-Duser.country=US"/>
			<jvmarg value="-Duser.language=en"/>
			<arg value="./test/${script}.groovy"/>
		</java>
	</target>

	<target name="release" depends="clean,init,build" >
		<!--copy file="readme.txt" todir="${dest.dir}">
			<filterchain>
				<expandproperties/>
			</filterchain>
		</copy-->
        <zip zipfile="${dest.dir}/${artefact.name}-${svn.version}.zip">
			<zipfileset dir="." includes="README.md"/>
			<zipfileset dir="${dest.dir.lib}" includes="*.jar"/>
        </zip>
	</target>

	<target name="svn-version" >
		<!-- GET SVN REVISION INFORMATION -->
		<tempfile property="svn.temp" deleteonexit="true"/>
		
		<exec executable="svn" output="${svn.temp}">
			<arg value="info"/>
			<arg value="."/>
		</exec>
		
		<!--GENERATE VERSION FROM SVN INFO-->

		<loadproperties srcfile="${svn.temp}" >
			<filterchain>
				<tokenfilter>
					<containsregex pattern="^Last Changed Rev:\s*(\d+).*$" replace="svn.revision=\1"/>
				</tokenfilter>
			</filterchain>
		</loadproperties>
		
		<loadproperties srcfile="${svn.temp}" >
			<filterchain>
				<tokenfilter>
					<containsregex pattern="^URL:\s*(.*)$" replace="svn.url=\1"/>
				</tokenfilter>
			</filterchain>
		</loadproperties>
		
		<loadproperties srcfile="${svn.temp}" >
			<filterchain>
				<tokenfilter>
					<containsregex pattern="^URL:\s*.*" />
					<replaceregex pattern="^.*/trunk$" replace="svn.version=trunk.r${svn.revision}" flags="g"/>
					<replaceregex pattern="^.*/tags/(.*)$" replace="svn.version=\1" flags="g"/>
					<replaceregex pattern="^.*/branches/(.*)$" replace="svn.version=\1.r${svn.revision}b" flags="g"/>
				</tokenfilter>
			</filterchain>
		</loadproperties>

		<echo message="version=${svn.version}" />
	</target>
	
</project>
